# -*- coding: utf-8 -*-
"""Google time series project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bXm14K0WhiAnyJu05c0Ub2mMVm0hEryp

**Step one: import the correct dataset**
"""

import pandas as pd
import pandas as numpy
import matplotlib.pyplot as plt

import datetime as dt

data_df = pd.read_csv("Google_Stocks.csv", parse_dates = True, index_col = "Month_Starting")
data_df
# we wanna make sure we index at the month starting point because we will focus on the avg volume

# pd.read_excel("Google_Dataset.xlsx", parse_dates = True, index_col='Month Starting')
# data_df

data_df.head()

data_df.shape
# this is rows and columns

data_df.info()

"""**Step two: Data preproccessing**"""

data_df.isna().sum()

data_df.columns

data_google = data_df
data_google.head(10)

"""**Step four ETS**"""

from statsmodels.tsa.seasonal import seasonal_decompose

from statsmodels.tsa.tsatools import freq_to_period

result = seasonal_decompose(data_df['Avg_Volume'], model = 'multiplicative', period=12)

result.plot()

from pylab import rcParams
rcParams['figure.figsize']=12,5
result.plot();

"""**Step Five: Create EWMA**"""

data_df.index = pd.to_datetime(data_df.index)
print(data_df)

data_df.head()

data_df.index

"""**Six months**"""

data_df['6-month-SMA'] = data_df['Avg_Volume'].rolling (window = 6).mean() #Window is in relation to data
data_df

"""**12 Months**"""

data_df['12-month-SMA'] = data_df['Avg_Volume'].rolling (window = 12).mean()
data_df

data_df.plot()

"""**Creating EWMA**"""

data_df['EWMA-12'] = data_df['Avg_Volume'].ewm (span = 12).mean()
data_df

data_df[['Avg_Volume', 'EWMA-12']].plot();

data_df[['Avg_Volume','12-month-SMA','EWMA-12']].plot(figsize=(12,5));

data_df.info()



data_df.columns

data_df['EWMA-6'] = data_df['Avg_Volume'].ewm (span = 6).mean()
data_df

data_df[['Avg_Volume', 'EWMA-6']].plot();

"""**Create General Forecasting for the next quarter**"""

import warnings
warnings.filterwarnings("ignore")

data_df.index.asfreq = 'MS' # ms == month start
data_df.head()
# make sure to put the as in front of the

data_df.tail()

data_df.info()

len(data_df)

"""**Train the data**"""

train_data = data_df.iloc[:80] #
test_data = data_df.iloc[80:]

len(train_data), len(test_data)

from statsmodels.tsa.holtwinters import ExponentialSmoothing

ml_model = ExponentialSmoothing(train_data['Avg_Volume'],trend='mul',seasonal='mul',seasonal_periods=12).fit()

test_predictions = ml_model.forecast(119).rename('Google Forecast')

test_predictions

train_data['Avg_Volume'].plot(legend=True,label='TRAIN')
test_data['Avg_Volume'].plot(legend=True,label='TEST',figsize=(12,8));

train_data['Avg_Volume'].plot(legend=True,label='TRAIN')
test_data['Avg_Volume'].plot(legend=True,label='TEST',figsize=(12,8))

test_predictions.plot(legend=True,label='PREDICTION');

train_data['Avg_Volume'].plot(legend=True,label='TRAIN')
test_data['Avg_Volume'].plot(legend=True,label='TEST',figsize=(12,8))
#let's zoom into the period we were predicting for

#  create new visuals

final_model = ExponentialSmoothing(data_df['Avg_Volume'],trend='mul',seasonal='mul',seasonal_periods=12).fit()

forecast_predictions = final_model.forecast(36)

data_df['Avg_Volume'].plot(figsize=(12,8))

forecast_predictions.plot();

#Avg Volume Histogram Seaborn
# Set Seaborn style
sns.set(style="whitegrid")

# Create the histogram
plt.figure(figsize=(12, 6))
sns.histplot(data=train_data, x='Avg_Volume', bins=20, color="skyblue", edgecolor='black', kde=True)

# Add labels and a title
plt.xlabel("Average Volume", fontsize=14)
plt.ylabel("Frequency", fontsize=14)
plt.title("Histogram of Average Volume", fontsize=16)

"""# Test for Stationarity"""

data_df['Avg_Volume'].plot(figsize=(12,8))

forecast_predictions.plot();